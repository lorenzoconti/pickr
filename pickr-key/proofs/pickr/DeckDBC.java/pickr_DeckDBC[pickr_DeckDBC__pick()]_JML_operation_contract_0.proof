\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Sep 02 13:00:09 CEST 2020
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../../../src";

\proofObligation "#Proof Obligation Settings
#Wed Sep 02 13:00:09 CEST 2020
name=pickr.DeckDBC[pickr.DeckDBC\\:\\:pick()].JML operation contract.0
contract=pickr.DeckDBC[pickr.DeckDBC\\:\\:pick()].JML operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "loren" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "243")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "self,result,exc,heapAtPre,o,f"))
(rule "translateJavaSubInt" (formula "1") (term "1,0,1,1,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "8") (term "0,1,1,0,0,1"))
(rule "eqSymm" (formula "8") (term "0,1,0,0,1"))
(rule "polySimp_elimSub" (formula "8") (term "0,0,1,1,0,0,1"))
(rule "mul_literals" (formula "8") (term "1,0,0,1,1,0,0,1"))
(rule "polySimp_homoEq" (formula "8") (term "0,1,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0,0,1"))
(rule "polySimp_addComm0" (formula "8") (term "1,1,0,0,1,1,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,1,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,1,0,0,1"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,1,0,0,1"))
(rule "polySimp_addComm0" (formula "8") (term "0,0,0,1,1,0,0,1"))
(rule "inEqSimp_gtToGeq" (formula "5"))
(rule "times_zero_1" (formula "5") (term "1,0,0"))
(rule "add_zero_right" (formula "5") (term "0,0"))
(rule "assignment" (formula "8") (term "1"))
(builtin "One Step Simplification" (formula "8"))
(rule "polySimp_sepNegMonomial" (formula "8") (term "0,1,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "0,0,1,1,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "0,0,1,1,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "5"))
(rule "mul_literals" (formula "5") (term "1"))
(rule "Class_invariant_axiom_for_pickr_DeckDBC" (formula "6") (inst "sk=sk_0") (ifseqformula "3"))
(branch "Use Axiom"
   (rule "nonNull" (formula "6") (inst "i=i"))
   (rule "sub_literals" (formula "6") (term "2,1,0,1,1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "greater_literals" (formula "6") (term "0,1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "6"))
   (rule "narrowSelectArrayType" (formula "6") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "7"))
   (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
   (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "6") (term "0"))
   (rule "nnf_notAnd" (formula "6") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
   (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
   (rule "mul_literals" (formula "6") (term "1,0,0,0"))
   (rule "commute_or_2" (formula "6") (term "0"))
   (rule "commute_or" (formula "6") (term "0,0"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_pick,savedHeapBefore_pick"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "ifUnfold" (formula "9") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x"))
   (rule "compound_greater_than_comparison_1" (formula "9") (term "1") (inst "#v0=x_1"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_1"))
   (rule "assignment_read_attribute_this" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "greater_than_comparison_simple" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "inEqSimp_gtToGeq" (formula "9") (term "0,0,1,0"))
   (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,1,0"))
   (rule "add_zero_right" (formula "9") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,1,0"))
   (rule "mul_literals" (formula "9") (term "1,0,0,1,0"))
   (rule "replace_known_left" (formula "9") (term "0,0,1,0") (ifseqformula "5"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "ifSplit" (formula "9"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "variableDeclarationAssign" (formula "9") (term "1"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "last"))
      (rule "eval_order_array_access4" (formula "9") (term "1") (inst "#v0=c_arr"))
      (rule "variableDeclarationAssign" (formula "9") (term "1"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "c_arr"))
      (rule "assignment_read_attribute_this" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "eval_order_array_access5" (formula "9") (term "1") (inst "#v1=x") (inst "#ar1=c_arr_1"))
      (rule "variableDeclarationAssign" (formula "9") (term "1"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "c_arr_1"))
      (rule "assignment" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "variableDeclarationAssign" (formula "9") (term "1"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_2"))
      (rule "assignment_read_attribute_this" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "assignment_array2" (formula "9") (term "1"))
      (branch "Normal Execution (c_arr_1 != null)"
         (builtin "One Step Simplification" (formula "10"))
         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "7")))
         (rule "orRight" (formula "9"))
         (rule "inEqSimp_ltRight" (formula "10"))
         (rule "times_zero_1" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "10"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "7"))
         (rule "leq_literals" (formula "2") (term "0"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
         (rule "mul_literals" (formula "6") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0"))
         (rule "add_literals" (formula "6") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
         (rule "mul_literals" (formula "6") (term "1"))
         (rule "postdecrement_attribute" (formula "11") (term "1") (inst "#v=d"))
         (rule "variableDeclarationAssign" (formula "11") (term "1"))
         (rule "variableDeclaration" (formula "11") (term "1") (newnames "d"))
         (rule "assignment" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "eval_order_access4" (formula "11") (term "1") (inst "#v1=x") (inst "#v0=d_1"))
         (rule "variableDeclarationAssign" (formula "11") (term "1"))
         (rule "variableDeclaration" (formula "11") (term "1") (newnames "d_1"))
         (rule "assignment" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "variableDeclarationAssign" (formula "11") (term "1"))
         (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_4"))
         (rule "compound_int_cast_expression" (formula "11") (term "1") (inst "#v=x_5"))
         (rule "variableDeclarationAssign" (formula "11") (term "1"))
         (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_5"))
         (rule "remove_parentheses_right" (formula "11") (term "1"))
         (rule "compound_subtraction_1" (formula "11") (term "1") (inst "#v=x_6"))
         (rule "variableDeclarationAssign" (formula "11") (term "1"))
         (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_6"))
         (rule "assignment_read_attribute" (formula "11") (term "1"))
         (branch "Normal Execution (d != null)"
            (builtin "One Step Simplification" (formula "12"))
            (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")))
            (rule "false_right" (formula "11"))
            (rule "assignmentSubtractionInt" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "translateJavaSubInt" (formula "11") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "11") (term "0,1,0"))
            (rule "mul_literals" (formula "11") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "11") (term "0,1,0"))
            (rule "widening_identity_cast_5" (formula "11") (term "1"))
            (rule "assignment" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "assignment_write_attribute" (formula "11") (term "1"))
            (branch "Normal Execution (d_1 != null)"
               (builtin "One Step Simplification" (formula "12"))
               (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")))
               (rule "false_right" (formula "11"))
               (rule "blockReturn" (formula "11") (term "1"))
               (rule "methodCallReturn" (formula "11") (term "1"))
               (rule "assignment" (formula "11") (term "1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "methodCallEmpty" (formula "11") (term "1"))
               (rule "tryEmpty" (formula "11") (term "1"))
               (rule "emptyModality" (formula "11") (term "1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "eqSymm" (formula "11") (term "0"))
               (rule "polySimp_homoEq" (formula "11") (term "0,1"))
               (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
               (rule "dismissNonSelectedField" (formula "11") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "polySimp_sepPosMonomial" (formula "11") (term "0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,0"))
               (rule "pullOutSelect" (formula "11") (term "0,0") (inst "selectSK=pickr_DeckDBC_index_0"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "12") (term "0,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "Class_invariant_axiom_for_pickr_DeckDBC" (formula "11") (term "0") (inst "sk=sk_2") (ifseqformula "4"))
               (branch "Use Axiom"
                  (rule "dismissNonSelectedField" (formula "11") (term "1,0"))
                  (rule "nonNull" (formula "11") (term "0") (inst "i=i"))
                  (rule "greater_literals" (formula "11") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "9")))
                  (rule "sub_literals" (formula "11") (term "2,1,0,0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,0"))
                  (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0,0") (ifseqformula "2") (ifseqformula "9"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
                  (rule "nnf_imp2or" (formula "11") (term "0,0"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,0"))
                  (rule "arrayLengthIsAnInt" (formula "8") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "6"))
                  (rule "leq_literals" (formula "8") (term "0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "allLeft" (formula "8") (inst "t=int::select(heap, self, pickr.DeckDBC::$index)"))
                  (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "7"))
                  (rule "qeq_literals" (formula "8") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "inEqSimp_contradInEq0" (formula "8") (term "1") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "8") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                  (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "8") (term "0,0,1"))
                  (rule "leq_literals" (formula "8") (term "0,1"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "notLeft" (formula "8"))
                  (rule "replace_known_right" (formula "12") (term "0,1") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "allRight" (formula "12") (inst "sk=i_1"))
                  (rule "orRight" (formula "12"))
                  (rule "orRight" (formula "12"))
                  (rule "notRight" (formula "14"))
                  (rule "inEqSimp_geqRight" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "14"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "allLeft" (formula "11") (inst "t=i_1"))
                  (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "11") (term "0,0,1"))
                  (rule "leq_literals" (formula "11") (term "0,1"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "11") (term "0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "closeFalse" (formula "11"))
               )
               (branch "Show Axiom Satisfiability"
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "closeTrue" (formula "11"))
               )
            )
            (branch "Null Reference (d_1 = null)"
               (builtin "One Step Simplification" (formula "12"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (d = null)"
            (builtin "One Step Simplification" (formula "12"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (c_arr_1 = null)"
         (builtin "One Step Simplification" (formula "10"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (c_arr_1 != null, but x_2 Out of Bounds!)"
         (builtin "One Step Simplification" (formula "10"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
         (rule "blockThrow" (formula "10") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "6"))
         (rule "qeq_literals" (formula "1") (term "0,1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "arrayLengthIsAnInt" (formula "7") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "arrayLengthNotNegative" (formula "7") (term "1,1,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "1,0,0,0,0,0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "throwUnfold" (formula "12") (term "1") (inst "#v0=a"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "a"))
         (rule "instanceCreationAssignment" (formula "12") (term "1") (inst "#v0=a_1"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "a_1"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "12") (term "1") (inst "#v0=a_2"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "a_2"))
         (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "__NEW__"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "12") (term "1") (inst "#v0=a_3"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "a_3"))
         (rule "allocateInstance" (formula "12"))
         (builtin "One Step Simplification" (formula "13"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "blockEmpty" (formula "15") (term "1"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "assignment_write_attribute_this" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallWithinClass" (formula "15") (term "1"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallSuper" (formula "15") (term "1"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallSuper" (formula "15") (term "1"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallSuper" (formula "15") (term "1"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallSuper" (formula "15") (term "1"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallSuper" (formula "15") (term "1"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "blockEmpty" (formula "15") (term "1"))
         (rule "assignment_write_attribute_this" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "assignment_write_attribute_this" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "blockEmpty" (formula "15") (term "1"))
         (rule "methodCallReturnIgnoreResult" (formula "15") (term "1"))
         (rule "methodCallReturn" (formula "15") (term "1"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "blockEmpty" (formula "15") (term "1"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallSuper" (formula "15") (term "1"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallSuper" (formula "15") (term "1"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallSuper" (formula "15") (term "1"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallSuper" (formula "15") (term "1"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallSuper" (formula "15") (term "1"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "blockEmpty" (formula "15") (term "1"))
         (rule "assignment_write_attribute_this" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "assignment_write_attribute_this" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "blockEmpty" (formula "15") (term "1"))
         (rule "assignment_write_attribute" (formula "15") (term "1"))
         (branch "Normal Execution (a_1 != null)"
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
            (rule "false_right" (formula "15"))
            (rule "assignment" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "methodCallParamThrow" (formula "15") (term "1"))
            (rule "tryCatchThrow" (formula "15") (term "1"))
            (rule "ifElseUnfold" (formula "15") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_3"))
            (rule "equality_comparison_simple" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "replace_known_right" (formula "15") (term "0,0,1,0") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "ifElseSplit" (formula "15"))
            (branch "if x_3 true"
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_3 false"
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifElseSplit" (formula "15"))
               (branch "if a instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "15") (term "1") (newnames "e"))
                  (rule "delete_unnecessary_cast" (formula "15") (term "1"))
                  (branch "Normal Execution (a instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "16"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "assignment" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "emptyModality" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                     (rule "Class_invariant_axiom_for_pickr_DeckDBC" (formula "15") (inst "sk=sk_1") (ifseqformula "5"))
                     (branch "Use Axiom"
                        (rule "dismissNonSelectedField" (formula "15") (term "1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1"))
                        (rule "nonNull" (formula "15") (inst "i=i"))
                        (rule "greater_literals" (formula "15") (term "0,1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "sub_literals" (formula "15") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1"))
                        (rule "pullOutSelect" (formula "15") (term "0,0,0") (inst "selectSK=pickr_DeckDBC_cards_0"))
                        (rule "applyEq" (formula "16") (term "1,0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                        (rule "applyEqReverse" (formula "16") (term "0,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "allRight" (formula "15") (inst "sk=i_0"))
                        (rule "impRight" (formula "15"))
                        (rule "andLeft" (formula "1"))
                        (rule "notRight" (formula "17"))
                        (rule "inEqSimp_homoInEq0" (formula "3"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                        (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "narrowSelectArrayType" (formula "1") (term "0") (ifseqformula "6") (ifseqformula "16"))
                        (rule "allLeft" (formula "13") (inst "t=i_0"))
                        (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "13") (term "0,0,1"))
                        (rule "leq_literals" (formula "13") (term "0,1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "13"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "Show Axiom Satisfiability"
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "closeTrue" (formula "15"))
                     )
                  )
                  (branch "ClassCastException (!(a instanceof java.lang.Throwable))"
                     (builtin "One Step Simplification" (formula "16"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "closeTrue" (formula "15"))
                  )
               )
               (branch "if a instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Null Reference (a_1 = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Show Axiom Satisfiability"
   (builtin "One Step Simplification" (formula "7"))
   (rule "closeTrue" (formula "7"))
)
)

}
